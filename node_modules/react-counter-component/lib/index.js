"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  position: fixed;\n  top: 25px;\n  right: 25px;\n  width: 200px;\n  padding: 10px;\n  background: #EE0A4E;\n  color: #fff;\n  font-size: 13px;\n  border-radius: 4px;\n  -webkit-box-shadow: 0px 0px 8px -2px rgba(0,0,0,0.75);\n  -moz-box-shadow: 0px 0px 8px -2px rgba(0,0,0,0.75);\n  box-shadow: 0px 0px 8px -2px rgba(0,0,0,0.75);\n  &:hover {\n    opacity: .9;\n    cursor: pointer;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  width: 100px;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Counter = _styledComponents.default.span(_templateObject());

var NotificationBox = _styledComponents.default.div(_templateObject2());

var CounterComponent =
/*#__PURE__*/
function (_Component) {
  _inherits(CounterComponent, _Component);

  function CounterComponent(props) {
    var _this;

    _classCallCheck(this, CounterComponent);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CounterComponent).call(this, props));
    _this.timer = 0;
    _this.state = {
      startTime: new Date(),
      time: 0,
      triggered: false,
      showNotificationTimeToEnd: props.showNotificationTimeToEnd ? props.showNotificationTimeToEnd : 5,
      showNotificationBox: false,
      notificationClosed: false
    };
    return _this;
  }

  _createClass(CounterComponent, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var newState = {}; // Set up timer

      this.timer = setTimeout(function () {
        var elapsedTime = Math.floor((new Date() - new Date(_this2.state.startTime)) / 1000); // Check if notificationBox should appear

        if (elapsedTime + _this2.state.showNotificationTimeToEnd > _this2.props.limit && _this2.props.showNotification) {
          newState.showNotificationBox = true;
        } // Check if time elapsed


        if (elapsedTime > _this2.props.limit) {
          // Trigger action
          if (_this2.state.triggered === false) {
            _this2.props.onFinish();
          }

          newState.triggered = true;
        }

        newState.time = elapsedTime; // Set state finally:

        _this2.setState(newState);

        _this2.componentDidMount();
      }, 1000);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // Remove timer
      clearTimeout(this.timer);
    } // Reset timer

  }, {
    key: "resetTimer",
    value: function resetTimer() {
      this.setState({
        startTime: new Date(),
        notificationClosed: false,
        showNotificationBox: false,
        triggered: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var leftTime = this.props.limit - this.state.time;
      if (leftTime < 0) leftTime = 0;
      return _react.default.createElement(Counter, {
        className: this.props.className,
        style: this.props.style
      }, this.props.showCounter && String(leftTime), this.state.showNotificationBox && !this.state.triggered && !this.state.notificationClosed && _react.default.createElement(NotificationBox, {
        onClick: function onClick() {
          return _this3.setState({
            showNotificationBox: false,
            notificationClosed: true
          });
        }
      }, this.props.notificationText));
    }
  }]);

  return CounterComponent;
}(_react.Component);

CounterComponent.propTypes = {
  className: _propTypes.default.string,
  limit: _propTypes.default.number,
  onFinish: _propTypes.default.func,
  notificationText: _propTypes.default.any,
  showCounter: _propTypes.default.bool,
  showNotification: _propTypes.default.bool,
  showNotificationTimeToEnd: _propTypes.default.number,
  style: _propTypes.default.object
};
var _default = CounterComponent;
exports.default = _default;